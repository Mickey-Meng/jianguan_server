<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.common.core.dao.jianguan.ZjFGroupsProjectsDAO">
  <resultMap id="BaseResultMap" type="com.ruoyi.common.core.domain.entity.ZjFGroupsProjects">
    <result column="GROUPID" jdbcType="INTEGER" property="groupid" />
    <result column="PROJECTID" jdbcType="VARCHAR" property="projectid" />
    <result column="STTIME" jdbcType="TIMESTAMP" property="sttime" />
    <result column="STSTATE" jdbcType="INTEGER" property="ststate" />
    <result column="STORDER" jdbcType="INTEGER" property="storder" />
    <result column="PROJECTNAME" jdbcType="VARCHAR" property="projectname" />
    <result column="PROJECTTYPE" jdbcType="VARCHAR" property="projecttype" />
  </resultMap>
  <insert id="insert" parameterType="com.ruoyi.common.core.domain.entity.ZjFGroupsProjects">
    insert into zj_f_groups_projects (GROUPID, PROJECTID, STTIME,
      STSTATE, STORDER, PROJECTNAME,
      PROJECTTYPE)
    values (#{groupid,jdbcType=INTEGER}, #{projectid,jdbcType=VARCHAR}, #{sttime,jdbcType=TIMESTAMP},
      #{ststate,jdbcType=INTEGER}, #{storder,jdbcType=INTEGER}, #{projectname,jdbcType=VARCHAR},
      #{projecttype,jdbcType=VARCHAR})
  </insert>

  <sql id="Base_Column_List">
    GROUPID, PROJECTID, STTIME,
      STSTATE, STORDER, PROJECTNAME,
      PROJECTTYPE
  </sql>
  <insert id="insertSelective" parameterType="com.ruoyi.common.core.domain.entity.ZjFGroupsProjects">
    insert into zj_f_groups_projects
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="groupid != null">
        GROUPID,
      </if>
      <if test="projectid != null">
        PROJECTID,
      </if>
      <if test="sttime != null">
        STTIME,
      </if>
      <if test="ststate != null">
        STSTATE,
      </if>
      <if test="storder != null">
        STORDER,
      </if>
      <if test="projectname != null">
        PROJECTNAME,
      </if>
      <if test="projecttype != null">
        PROJECTTYPE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="groupid != null">
        #{groupid,jdbcType=INTEGER},
      </if>
      <if test="projectid != null">
        #{projectid,jdbcType=VARCHAR},
      </if>
      <if test="sttime != null">
        #{sttime,jdbcType=TIMESTAMP},
      </if>
      <if test="ststate != null">
        #{ststate,jdbcType=INTEGER},
      </if>
      <if test="storder != null">
        #{storder,jdbcType=INTEGER},
      </if>
      <if test="projectname != null">
        #{projectname,jdbcType=VARCHAR},
      </if>
      <if test="projecttype != null">
        #{projecttype,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>


  <select id="getProjectByUserid" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select a.* from zj_f_groups_projects a
    LEFT JOIN ss_f_user_group b
    on a.GROUPID = b.GROUPID
    where b.USERID = #{id,jdbcType=INTEGER}
  </select>


  <select id="getProjectCode" parameterType="java.util.ArrayList" resultMap="BaseResultMap" >
    select * from zj_f_groups_projects where groupid in
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
    and PROJECTID is NOT NULL
  </select>


  <select id="getProjectCodeByProjectIds" parameterType="java.util.ArrayList" resultMap="BaseResultMap" >
    select
    *
    from zj_f_groups_projects where projectid in
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>

  </select>

  <resultMap id="abc" type="com.ruoyi.jianguan.common.domain.dto.GqGroupsProjectsDTO">
    <result column="groupid" jdbcType="INTEGER" property="groupid" />
    <result column="projectid" jdbcType="VARCHAR" property="projectid" />
    <result column="projectname" jdbcType="VARCHAR" property="projectname" />
  </resultMap>

  <select id="getByGonquId" parameterType="integer" resultType="string">
    select c.projectid from zj_f_groups_projects c
                              right join
                            (
                              select
                                b.dept_id as id ,b.dept_name as name
                              from sys_dept a left join sys_dept b
                                                        on b.parent_id = a.dept_id
                              where a.dept_id = #{gongquid}

                            ) d
                            on c.groupid = d.id
                              and PROJECTID is not null
                              and PROJECTTYPE is not null;
  </select>

</mapper>
