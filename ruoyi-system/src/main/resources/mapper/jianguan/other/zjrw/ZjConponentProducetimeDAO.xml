<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.jianguan.common.dao.ZjConponentProducetimeDAO">

  <resultMap id="planDataNew" type="com.ruoyi.jianguan.common.domain.dto.PlanDataNew">
    <result column="projecttype" jdbcType="VARCHAR" property="projecttype" />
    <result column="conponenttype" jdbcType="VARCHAR" property="conponenttype" />
    <result column="conponenttypename" jdbcType="VARCHAR" property="conponenttypename" />
    <result column="plan" jdbcType="INTEGER" property="plan" />
    <result column="plannum" jdbcType="REAL" property="plannum" />
    <result column="allcount" jdbcType="INTEGER" property="allcount" />
    <result column="allcountnum" jdbcType="REAL" property="allcountnum" />
  </resultMap>

  <resultMap id="actDataNew" type="com.ruoyi.jianguan.common.domain.dto.ActDataNew">
    <result column="projecttype" jdbcType="VARCHAR" property="projecttype" />
    <result column="conponenttype" jdbcType="VARCHAR" property="conponenttype" />
    <result column="conponenttypename" jdbcType="VARCHAR" property="conponenttypename" />
    <result column="act" jdbcType="INTEGER" property="act" />
    <result column="actnum" jdbcType="REAL" property="actnum" />
    <result column="allcount" jdbcType="INTEGER" property="allcount" />
    <result column="allcountnum" jdbcType="REAL" property="allcountnum" />
  </resultMap>

  <resultMap id="middleData" type="com.ruoyi.jianguan.common.domain.entity.MiddleData">
    <result column="projecttype" jdbcType="VARCHAR" property="projecttype" />
    <result column="finish" jdbcType="INTEGER" property="finish" />
    <result column="delay" jdbcType="INTEGER" property="delay" />
    <result column="today" jdbcType="INTEGER" property="today" />
    <result column="countall" jdbcType="INTEGER" property="countall" />
  </resultMap>


  <resultMap id="newCensusDatamap" type="com.ruoyi.jianguan.common.domain.dto.NewCensusData">
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="year" jdbcType="VARCHAR" property="year" />
  </resultMap>



  <resultMap id="gongquData" type="com.ruoyi.jianguan.common.domain.dto.GqFirst">
    <result column="gongqucode" jdbcType="VARCHAR" property="gongqucode" />
    <result column="total" jdbcType="INTEGER" property="total" />
    <result column="finish" jdbcType="INTEGER" property="finish" />
    <result column="gongquname" jdbcType="VARCHAR" property="gongquname" />
    <result column="projectcode" jdbcType="VARCHAR" property="projectcode" />
    <result column="projectname" jdbcType="VARCHAR" property="projectname" />
  </resultMap>


  <resultMap id="pjData" type="com.ruoyi.jianguan.common.domain.dto.PjGirst">
    <result column="sxname" jdbcType="VARCHAR" property="sxname" />
    <result column="total" jdbcType="INTEGER" property="total" />
    <result column="finish" jdbcType="INTEGER" property="finish" />
    <result column="sxtype" jdbcType="VARCHAR" property="sxtype" />
    <result column="projectcode" jdbcType="VARCHAR" property="projectcode" />
    <result column="projectname" jdbcType="VARCHAR" property="projectname" />
  </resultMap>



  <resultMap id="statusData" type="com.ruoyi.jianguan.common.domain.entity.StatusData">
    <result column="projecttype" jdbcType="VARCHAR" property="projecttype" />
    <result column="conponenttype" jdbcType="VARCHAR" property="conponenttype" />
    <result column="conponenttypename" jdbcType="VARCHAR" property="conponenttypename" />
    <result column="finish" jdbcType="INTEGER" property="finish" />
    <result column="delay" jdbcType="INTEGER" property="delay" />
    <result column="priod" jdbcType="INTEGER" property="priod" />
    <result column="countall" jdbcType="INTEGER" property="countall" />
  </resultMap>



  <resultMap id="BaseResultMap" type="com.ruoyi.common.core.domain.entity.ZjConponentProducetime">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="conponentid" jdbcType="INTEGER" property="conponentid" />
    <result column="conponentcode" jdbcType="VARCHAR" property="conponentcode" />
    <result column="plansttime" jdbcType="TIMESTAMP" property="plansttime" />
    <result column="planendtime" jdbcType="TIMESTAMP" property="planendtime" />
    <result column="actulsttime" jdbcType="TIMESTAMP" property="actulsttime" />
    <result column="actulendtime" jdbcType="TIMESTAMP" property="actulendtime" />
    <result column="xxsttime" jdbcType="TIMESTAMP" property="xxsttime" />
    <result column="xxendtime" jdbcType="TIMESTAMP" property="xxendtime" />
    <result column="recordtime" jdbcType="TIMESTAMP" property="recordtime" />
    <result column="projectcode" jdbcType="VARCHAR" property="projectcode" />
    <result column="projecttype" jdbcType="VARCHAR" property="projecttype" />
    <result column="conponenttype" jdbcType="VARCHAR" property="conponenttype" />
    <result column="projectname" jdbcType="VARCHAR" property="projectname" />
    <result column="conponenttypename" jdbcType="VARCHAR" property="conponenttypename" />
    <result column="x" jdbcType="VARCHAR" property="x" />
    <result column="y" jdbcType="VARCHAR" property="y" />
    <result column="z" jdbcType="VARCHAR" property="z" />
    <result column="mouldid" jdbcType="VARCHAR" property="mouldid" />
    <result column="desginnum" jdbcType="REAL" property="desginnum" />
    <result column="actulnum" jdbcType="REAL" property="actulnum" />
    <result column="gongquid" jdbcType="VARCHAR" property="gongquid" />
    <result column="gongquname" jdbcType="VARCHAR" property="gongquname" />
    <result column="pjctype" jdbcType="VARCHAR" property="pjctype" />
  </resultMap>
  <sql id="Base_Column_List">
    id, conponentid, conponentcode, plansttime, planendtime, actulsttime, actulendtime,
    xxsttime, xxendtime, recordtime, projectcode, projecttype, conponenttype, projectname,
    conponenttypename, x, y, z, mouldid, desginnum, actulnum, gongquid, gongquname, pjctype
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from zj_conponent_producetime
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from zj_conponent_producetime
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ruoyi.common.core.domain.entity.ZjConponentProducetime">
    insert into zj_conponent_producetime (id, conponentid, conponentcode,
      plansttime, planendtime, actulsttime,
      actulendtime, xxsttime, xxendtime,
      recordtime, projectcode, projecttype,
      conponenttype, projectname, conponenttypename,
      x, y, z, mouldid,
      desginnum, actulnum, gongquid,
      gongquname, pjctype)
    values (#{id,jdbcType=INTEGER}, #{conponentid,jdbcType=INTEGER}, #{conponentcode,jdbcType=VARCHAR},
      #{plansttime,jdbcType=TIMESTAMP}, #{planendtime,jdbcType=TIMESTAMP}, #{actulsttime,jdbcType=TIMESTAMP},
      #{actulendtime,jdbcType=TIMESTAMP}, #{xxsttime,jdbcType=TIMESTAMP}, #{xxendtime,jdbcType=TIMESTAMP},
      #{recordtime,jdbcType=TIMESTAMP}, #{projectcode,jdbcType=VARCHAR}, #{projecttype,jdbcType=VARCHAR},
      #{conponenttype,jdbcType=VARCHAR}, #{projectname,jdbcType=VARCHAR}, #{conponenttypename,jdbcType=VARCHAR},
      #{x,jdbcType=VARCHAR}, #{y,jdbcType=VARCHAR}, #{z,jdbcType=VARCHAR}, #{mouldid,jdbcType=VARCHAR},
      #{desginnum,jdbcType=REAL}, #{actulnum,jdbcType=REAL}, #{gongquid,jdbcType=VARCHAR},
      #{gongquname,jdbcType=VARCHAR}, #{pjctype,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ruoyi.common.core.domain.entity.ZjConponentProducetime">
    insert into zj_conponent_producetime
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="conponentid != null">
        conponentid,
      </if>
      <if test="conponentcode != null">
        conponentcode,
      </if>
      <if test="plansttime != null">
        plansttime,
      </if>
      <if test="planendtime != null">
        planendtime,
      </if>
      <if test="actulsttime != null">
        actulsttime,
      </if>
      <if test="actulendtime != null">
        actulendtime,
      </if>
      <if test="xxsttime != null">
        xxsttime,
      </if>
      <if test="xxendtime != null">
        xxendtime,
      </if>
      <if test="recordtime != null">
        recordtime,
      </if>
      <if test="projectcode != null">
        projectcode,
      </if>
      <if test="projecttype != null">
        projecttype,
      </if>
      <if test="conponenttype != null">
        conponenttype,
      </if>
      <if test="projectname != null">
        projectname,
      </if>
      <if test="conponenttypename != null">
        conponenttypename,
      </if>
      <if test="x != null">
        x,
      </if>
      <if test="y != null">
        y,
      </if>
      <if test="z != null">
        z,
      </if>
      <if test="mouldid != null">
        mouldid,
      </if>
      <if test="desginnum != null">
        desginnum,
      </if>
      <if test="actulnum != null">
        actulnum,
      </if>
      <if test="gongquid != null">
        gongquid,
      </if>
      <if test="gongquname != null">
        gongquname,
      </if>
      <if test="pjctype != null">
        pjctype,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="conponentid != null">
        #{conponentid,jdbcType=INTEGER},
      </if>
      <if test="conponentcode != null">
        #{conponentcode,jdbcType=VARCHAR},
      </if>
      <if test="plansttime != null">
        #{plansttime,jdbcType=TIMESTAMP},
      </if>
      <if test="planendtime != null">
        #{planendtime,jdbcType=TIMESTAMP},
      </if>
      <if test="actulsttime != null">
        #{actulsttime,jdbcType=TIMESTAMP},
      </if>
      <if test="actulendtime != null">
        #{actulendtime,jdbcType=TIMESTAMP},
      </if>
      <if test="xxsttime != null">
        #{xxsttime,jdbcType=TIMESTAMP},
      </if>
      <if test="xxendtime != null">
        #{xxendtime,jdbcType=TIMESTAMP},
      </if>
      <if test="recordtime != null">
        #{recordtime,jdbcType=TIMESTAMP},
      </if>
      <if test="projectcode != null">
        #{projectcode,jdbcType=VARCHAR},
      </if>
      <if test="projecttype != null">
        #{projecttype,jdbcType=VARCHAR},
      </if>
      <if test="conponenttype != null">
        #{conponenttype,jdbcType=VARCHAR},
      </if>
      <if test="projectname != null">
        #{projectname,jdbcType=VARCHAR},
      </if>
      <if test="conponenttypename != null">
        #{conponenttypename,jdbcType=VARCHAR},
      </if>
      <if test="x != null">
        #{x,jdbcType=VARCHAR},
      </if>
      <if test="y != null">
        #{y,jdbcType=VARCHAR},
      </if>
      <if test="z != null">
        #{z,jdbcType=VARCHAR},
      </if>
      <if test="mouldid != null">
        #{mouldid,jdbcType=VARCHAR},
      </if>
      <if test="desginnum != null">
        #{desginnum,jdbcType=REAL},
      </if>
      <if test="actulnum != null">
        #{actulnum,jdbcType=REAL},
      </if>
      <if test="gongquid != null">
        #{gongquid,jdbcType=VARCHAR},
      </if>
      <if test="gongquname != null">
        #{gongquname,jdbcType=VARCHAR},
      </if>
      <if test="pjctype != null">
        #{pjctype,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ruoyi.common.core.domain.entity.ZjConponentProducetime">
    update zj_conponent_producetime
    <set>
      <if test="conponentid != null">
        conponentid = #{conponentid,jdbcType=INTEGER},
      </if>
      <if test="conponentcode != null">
        conponentcode = #{conponentcode,jdbcType=VARCHAR},
      </if>
      <if test="plansttime != null">
        plansttime = #{plansttime,jdbcType=TIMESTAMP},
      </if>
      <if test="planendtime != null">
        planendtime = #{planendtime,jdbcType=TIMESTAMP},
      </if>
      <if test="actulsttime != null">
        actulsttime = #{actulsttime,jdbcType=TIMESTAMP},
      </if>
      <if test="actulendtime != null">
        actulendtime = #{actulendtime,jdbcType=TIMESTAMP},
      </if>
      <if test="xxsttime != null">
        xxsttime = #{xxsttime,jdbcType=TIMESTAMP},
      </if>
      <if test="xxendtime != null">
        xxendtime = #{xxendtime,jdbcType=TIMESTAMP},
      </if>
      <if test="recordtime != null">
        recordtime = #{recordtime,jdbcType=TIMESTAMP},
      </if>
      <if test="projectcode != null">
        projectcode = #{projectcode,jdbcType=VARCHAR},
      </if>
      <if test="projecttype != null">
        projecttype = #{projecttype,jdbcType=VARCHAR},
      </if>
      <if test="conponenttype != null">
        conponenttype = #{conponenttype,jdbcType=VARCHAR},
      </if>
      <if test="projectname != null">
        projectname = #{projectname,jdbcType=VARCHAR},
      </if>
      <if test="conponenttypename != null">
        conponenttypename = #{conponenttypename,jdbcType=VARCHAR},
      </if>
      <if test="x != null">
        x = #{x,jdbcType=VARCHAR},
      </if>
      <if test="y != null">
        y = #{y,jdbcType=VARCHAR},
      </if>
      <if test="z != null">
        z = #{z,jdbcType=VARCHAR},
      </if>
      <if test="mouldid != null">
        mouldid = #{mouldid,jdbcType=VARCHAR},
      </if>
      <if test="desginnum != null">
        desginnum = #{desginnum,jdbcType=REAL},
      </if>
      <if test="actulnum != null">
        actulnum = #{actulnum,jdbcType=REAL},
      </if>
      <if test="gongquid != null">
        gongquid = #{gongquid,jdbcType=VARCHAR},
      </if>
      <if test="gongquname != null">
        gongquname = #{gongquname,jdbcType=VARCHAR},
      </if>
      <if test="pjctype != null">
        pjctype = #{pjctype,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ruoyi.common.core.domain.entity.ZjConponentProducetime">
    update zj_conponent_producetime
    set conponentid = #{conponentid,jdbcType=INTEGER},
      conponentcode = #{conponentcode,jdbcType=VARCHAR},
      plansttime = #{plansttime,jdbcType=TIMESTAMP},
      planendtime = #{planendtime,jdbcType=TIMESTAMP},
      actulsttime = #{actulsttime,jdbcType=TIMESTAMP},
      actulendtime = #{actulendtime,jdbcType=TIMESTAMP},
      xxsttime = #{xxsttime,jdbcType=TIMESTAMP},
      xxendtime = #{xxendtime,jdbcType=TIMESTAMP},
      recordtime = #{recordtime,jdbcType=TIMESTAMP},
      projectcode = #{projectcode,jdbcType=VARCHAR},
      projecttype = #{projecttype,jdbcType=VARCHAR},
      conponenttype = #{conponenttype,jdbcType=VARCHAR},
      projectname = #{projectname,jdbcType=VARCHAR},
      conponenttypename = #{conponenttypename,jdbcType=VARCHAR},
      x = #{x,jdbcType=VARCHAR},
      y = #{y,jdbcType=VARCHAR},
      z = #{z,jdbcType=VARCHAR},
      mouldid = #{mouldid,jdbcType=VARCHAR},
      desginnum = #{desginnum,jdbcType=REAL},
      actulnum = #{actulnum,jdbcType=REAL},
      gongquid = #{gongquid,jdbcType=VARCHAR},
      gongquname = #{gongquname,jdbcType=VARCHAR},
      pjctype = #{pjctype,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <select id="getProgressData" parameterType="java.util.ArrayList" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from zj_conponent_producetime where projectcode in
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>

  </select>

  <select id="getCountNumber" parameterType="java.util.ArrayList" resultType="java.lang.Integer" >
    select
    count(1)
    from zj_conponent_producetime where projectcode in
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>

  </select>




  <select id="getActureData" parameterType="java.util.ArrayList" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from zj_conponent_producetime where projectcode in
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
    and actulendtime is not null
    <if test="sttime != null ">
      and actulendtime &gt;= #{sttime}
    </if>
    <if test="endtime != null ">
      and actulendtime &lt;= #{endtime}
    </if>
    and projecttype = #{type}
  </select>

  <select id="getPlantureData" parameterType="java.util.ArrayList" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from zj_conponent_producetime where projectcode in
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
    and planendtime is not null
    <if test="sttime != null ">
      and planendtime &gt;= #{sttime}
    </if>
    <if test="endtime != null ">
      and planendtime &lt;= #{endtime}
    </if>
    and projecttype = #{type}
  </select>



  <select id="getActureByToday" parameterType="java.util.ArrayList" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from zj_conponent_producetime where projectcode in
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
    and xxendtime is not null
    <if test="date != null ">
      and xxendtime &lt;= #{date}
    </if>
  </select>

  <select id="getMiddleData" parameterType="java.util.ArrayList" resultMap="middleData" >
    select
    projecttype,
    count(case when actulendtime is not null then 1 end ) as finish,
    0 as delay,
    count(case when actulendtime is not null and TO_DAYS(actulendtime) = TO_DAYS(NOW())then 0 end ) as today,
    count(0) as countall
    from zj_conponent_producetime where projectcode in
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
    group by projecttype
  </select>


  <select id="getStatus" parameterType="java.util.ArrayList" resultMap="statusData" >
    select
    projecttype,
    conponenttype,
    conponenttypename,
    count(case when actulendtime is not null then 1 end ) as finish,
    count(case when actulendtime is null and planendtime &lt; now() then 0 end ) as delay,
    count(case when actulendtime is not null and actulendtime &gt;= #{sttime}  and
    actulendtime &lt;= #{endtime} then 0 end ) as priod,
    count(0) as countall
    from zj_conponent_producetime where projectcode in
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
    group by projecttype, conponenttype, conponenttypename
  </select>

  <select id="getPlanByToday" parameterType="java.util.ArrayList" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from zj_conponent_producetime where projectcode in
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
    and planendtime is not null
    <if test="date != null ">
      and planendtime &lt;= #{date}
    </if>
  </select>

  <select id="getCountPeriodNum" parameterType="java.util.ArrayList" resultType="java.lang.Integer" >
    select
    count(1)
    from zj_conponent_producetime where projectcode in
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
    and actulendtime is not null
    <if test="conponentType != 'all' " >
     and conponentType = #{conponentType}
    </if>
    <choose>
      <when test="sort != 6">
        <if test="sttime != null ">
          and actulendtime &gt;= #{sttime}
        </if>
        <if test="endtime != null ">
          and actulendtime &lt;= #{endtime}
        </if>
      </when>
      <otherwise>
        <if test="endtime != null ">
          and actulendtime &lt;= #{endtime}
        </if>
      </otherwise>
    </choose>
  </select>



  <select id="getPlan" resultMap="planDataNew" >
    select
    projecttype,
    conponenttype,
    conponenttypename,
    count(case when planendtime &lt; now() then 1 end ) as plan,
    sum(case when planendtime &lt; now() then desginnum end ) as plannum,
    count(1) as allcount
    from zj_conponent_producetime where projectcode in
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
    and  projecttype = #{type}
    GROUP BY
    projecttype,
    conponenttype,
    conponenttypename
  </select>


  <select id="getAct" resultMap="actDataNew" >
    select
    projecttype,
    conponenttype,
    conponenttypename,
    count(case when actulendtime is not null then 1 end ) as act,
    sum(case when actulendtime is not null then desginnum end ) as actnum,
    count(1) as allcount
    from zj_conponent_producetime where projectcode in
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
    and  projecttype = #{type}
    GROUP BY
    projecttype,
    conponenttype,
    conponenttypename
  </select>


  <select id="getAllByProJect"   parameterType="java.util.ArrayList" resultMap="gongquData">
    select
        count(1) as total ,
        count(case when actulendtime is not null then 1 end) as finish,
        gongquid as gongqucode,
        gongquname as gongquname,
        projectcode,
        projectname
    from
        zj_conponent_producetime
    where
        projectcode
    in
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
    and projecttype = #{type} group by gongquid,gongquname,projectcode,projectname


  </select>

  <select id="getAllByProJectType"  parameterType="java.util.ArrayList"  resultMap="pjData">
    select count(1) as total ,count(case when actulendtime is not null then 1 end) as finish,
           projectcode,projectname,
           pjctype as sxtype,
           (case when  pjctype is null   then '分部工程是空'
                 else pjctype end 	) as sxname
    from zj_conponent_producetime where projectcode = #{projectcode}
                                    and projecttype = #{projecttype}
    group by projectcode, projectname, pjctype
  </select>



  <select id="getAllByProJectSX" resultMap="pjData">
    select
        count(1) as total,
        count(case when actulendtime is not null then 1 end) as finish,
        projectcode,
        projectname,
        pjctype as sxtype,
        (case when  pjctype = '上部构造预制和安装' then '上部构造预制和安装'
        when pjctype = '基础及下部构造' then '基础及下部构造'
        when pjctype = '上部构造现场浇筑' then '上部构造现场浇筑'
        when pjctype = '桥面系、附属工程及桥梁总体' then '桥面系、附属工程及桥梁总体'
        else '防护工程' end 	) as sxname
    from
        zj_conponent_producetime
    where
        projectcode = #{projectcode}
    and
        projecttype = 'QL'
    group by projectcode,projectname ,pjctype
  </select>

  <select id="getAllByProJectSD" parameterType="string" resultMap="pjData">
    select count(1) as total ,count(case when actulendtime is not null then 1 end) as finish,
    projectcode,projectname,
    pjctype as sxtype,
    (case when  pjctype = '洞口工程' then '洞口工程'
    when pjctype = '洞身开挖' then '洞身开挖'
    when pjctype = '洞身衬砌' then '洞身衬砌'
    when pjctype = '辅助通道' then '辅助通道'
    when pjctype = '防排水' then '防排水'
    when pjctype = '路面' then '路面'
    else '总体及装饰装修' end 	) as sxname
    from zj_conponent_producetime where projectcode = #{projectcode}
    and projecttype = 'SD'
    group by projectcode,projectname ,pjctype
  </select>

  <select id="getAllByProJectLM" parameterType="string" resultMap="pjData">
    select count(1) as total ,count(case when actulendtime is not null then 1 end) as finish,
    projectcode,projectname,
    pjctype as sxtype,
    (case when  pjctype is null   then '分部工程是空'
          else pjctype end 	) as sxname
    from zj_conponent_producetime where projectcode = #{projectcode}
    and projecttype = 'LM'
    group by projectcode, projectname, pjctype
  </select>



  <select id="getcount" parameterType="java.util.ArrayList" resultType="java.lang.Integer" >
    select
    count(1)
    from zj_conponent_producetime where gongquid  = #{gongquid}
    and actulendtime is not null
    and projecttype = #{type}
     <if test="sttime != null ">
     and actulendtime &gt;= #{sttime}
     </if>
     <if test="endtime != null ">
     and actulendtime &lt;= #{endtime}
     </if>
  </select>

  <select id="getTypeWeek" parameterType="java.util.ArrayList" resultMap="newCensusDatamap">
    select
        count(1) as count,
        WEEK(actulendtime,3) as type,
        DATE_FORMAT(actulendtime,'%Y') as year
    from
        zj_conponent_producetime
    where
        actulendtime is not null
    and
        projecttype = #{projectCode}
    and
        projectcode in
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
    <if test="conponentType != null ">
      and conponentType = #{conponentType}
    </if>
    GROUP BY
        WEEK(actulendtime,3),
		DATE_FORMAT(actulendtime,'%Y')
    ORDER BY
        DATE_FORMAT(actulendtime,'%Y') asc,
        WEEK(actulendtime,3) asc;
  </select>

  <select id="getTypeMonth" parameterType="java.util.ArrayList" resultMap="newCensusDatamap">
    select
        count(1) as count,
        MONTH(actulendtime) as type,
        DATE_FORMAT(actulendtime,'%Y') as year
    from
        zj_conponent_producetime
    where
        actulendtime is not null
    and
        projecttype = #{projectCode}
    and
        projectcode in
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
    <if test="conponentType != null ">
      and conponentType = #{conponentType}
    </if>
    GROUP BY
    MONTH(actulendtime),
    DATE_FORMAT(actulendtime,'%Y')
    ORDER BY
    DATE_FORMAT(actulendtime,'%Y') asc,MONTH(actulendtime) asc;
  </select>

  <select id="getTypeSeason" parameterType="java.util.ArrayList" resultMap="newCensusDatamap">
    select count(1)	as count,QUARTER(actulendtime) as type, DATE_FORMAT(actulendtime,'%Y') as year from zj_conponent_producetime
    where
        actulendtime is not null
    and
        projecttype = #{projectCode}
    and  projectcode in
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
    <if test="conponentType != null ">
      and conponentType = #{conponentType}
    </if>
    GROUP BY
    QUARTER(actulendtime),
    DATE_FORMAT(actulendtime,'%Y')
    ORDER BY
    DATE_FORMAT(actulendtime,'%Y') asc,QUARTER(actulendtime) asc;
  </select>

  <select id="getallNew" resultType="com.ruoyi.jianguan.common.domain.dto.NewProjectConType">
    select
        conponenttype as type,
        conponenttypename as name
    from
        zj_conponent_producetime
    where
        projecttype = 'QL'
    and
        gongquid in (${abc}) group by  conponenttype ,conponenttypename
  </select>
  <select id="getbyTypeData" parameterType="com.ruoyi.jianguan.common.domain.dto.NewCheckData" resultMap="BaseResultMap">
    select
        *
    from
        zj_conponent_producetime
    where 1=1
    <if test="sttime != null ">
      and actulendtime &gt;= #{sttime}
    </if>
    <if test="endtime != null ">
      and actulendtime &lt;= #{endtime}
    </if>
    <if test="code != null ">
      and conponentcode like concat('%', #{code}, '%')
    </if>
    <if test="projectid != null ">
      and projectcode = #{projectid}
    </if>
    <if test="conponenttype != null ">
      and conponenttype = #{conponenttype}
    </if>
     and projectcode in
    <foreach collection="projectCodes" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </select>

  <resultMap id="componentStatus" type="com.ruoyi.jianguan.common.domain.dto.ComponentProducetimeDTO">
    <result column="mouldid" jdbcType="VARCHAR" property="mouldid" />
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="layername" jdbcType="VARCHAR" property="layername" />
    <result column="actulendtime" jdbcType="TIMESTAMP" property="actulendtime" />
    <result column="actulsttime" jdbcType="TIMESTAMP" property="actulsttime" />
    <result column="plansttime" jdbcType="TIMESTAMP" property="plansttime" />
    <result column="planendtime" jdbcType="TIMESTAMP" property="planendtime" />
  </resultMap>

  <update id="updateTime" parameterType="com.ruoyi.common.core.domain.entity.ZjConponentProducetime">
    update zj_conponent_producetime set
          plansttime = #{zjByConponentId.plansttime}, planendtime = #{zjByConponentId.planendtime},
          actulsttime = #{zjByConponentId.actulsttime}, actulendtime = #{zjByConponentId.actulendtime}
    where conponentid = #{zjByConponentId.conponentid}
  </update>

  <select id="getData" parameterType="java.util.ArrayList" resultMap="componentStatus">
    select
        a.id, a.plansttime, a.planendtime, a.actulsttime,
        a.actulendtime, b.layername, b.mouldid
    from
        zj_conponent_producetime a
    left join
        conponent b
    on
        a.conponentcode = b.conponentcode
    where
        b.mouldid is not null
    and
        a.projectcode in
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </select>

  <resultMap id="groupProjects" type="com.ruoyi.jianguan.common.domain.dto.GroupProjectDTO">
    <result column="groupid" jdbcType="INTEGER" property="groupid" />
    <result column="projectid" jdbcType="VARCHAR" property="projectid" />
    <result column="parentid" jdbcType="VARCHAR" property="parentid" />
    <result column="sttime" jdbcType="TIMESTAMP" property="sttime" />
    <result column="ststate" jdbcType="INTEGER" property="ststate" />
    <result column="storder" jdbcType="INTEGER" property="storder" />
    <result column="projectname" jdbcType="VARCHAR" property="projectname" />
    <result column="projecttype" jdbcType="VARCHAR" property="projecttype" />
  </resultMap>

  <select id="getallProject" resultMap="groupProjects">
     select a.*,b.PARENTID from zj_f_groups_projects a left join ss_f_projects b on a.groupid = b.id where b.PARENTID in (${abc})
  </select>

  <select id="getAllByCode" resultMap="BaseResultMap">
    select * from zj_conponent_producetime where
    conponentcode in
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </select>

  <update id="updateByConponentcode" parameterType="com.ruoyi.common.core.domain.entity.ZjConponentProducetime">
    update zj_conponent_producetime
    set
      plansttime = #{plansttime,jdbcType=TIMESTAMP},
      planendtime = #{planendtime,jdbcType=TIMESTAMP},
      actulsttime = #{actulsttime,jdbcType=TIMESTAMP},
      actulendtime = #{actulendtime,jdbcType=TIMESTAMP}
    where conponentcode = #{conponentcode,jdbcType=VARCHAR}
  </update>

  <update id="updateGongQu" parameterType="com.ruoyi.common.core.domain.entity.ZjConponentProducetime">
    update zj_conponent_producetime
    set
      projectcode = #{projectcode,jdbcType=VARCHAR},
      projecttype = #{projecttype,jdbcType=VARCHAR},
      conponenttype = #{conponenttype,jdbcType=VARCHAR},
      projectname = #{projectname,jdbcType=VARCHAR},
      gongquid = #{gongquid,jdbcType=VARCHAR},
      gongquname = #{gongquname,jdbcType=VARCHAR}
    where conponentcode = #{conponentcode,jdbcType=VARCHAR}
  </update>

  <update id="updateTimesByCopy" parameterType="com.ruoyi.jianguan.common.domain.dto.ComponentProgressTimes">
    update zj_conponent_producetime set
        plansttime = #{plansttime,jdbcType=TIMESTAMP},
        planendtime = #{planendtime,jdbcType=TIMESTAMP},
        actulsttime = #{actulsttime,jdbcType=TIMESTAMP},
        actulendtime = #{actulendtime,jdbcType=TIMESTAMP}
    where conponentcode = #{conponentcode,jdbcType=VARCHAR}
  </update>

  <update id="updatePjcType" parameterType="com.ruoyi.common.core.domain.entity.ZjConponentProducetime">
    update zj_conponent_producetime
    set
      pjctype = #{pjctype,jdbcType=VARCHAR}
    where conponentid = #{conponentid,jdbcType=INTEGER}
  </update>
</mapper>
