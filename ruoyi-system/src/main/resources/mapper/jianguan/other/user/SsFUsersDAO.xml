<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.common.core.dao.SsFUsersDAO">
    <resultMap id="BaseResultMap" type="com.ruoyi.common.core.domain.entity.SsFUsers">
        <id column="ID" jdbcType="INTEGER" property="id"/>
        <result column="USERNAME" jdbcType="VARCHAR" property="username"/>
        <result column="PWD" jdbcType="VARCHAR" property="pwd"/>
        <result column="NAME" jdbcType="VARCHAR" property="name"/>
        <result column="USERCODE" jdbcType="VARCHAR" property="usercode"/>
        <result column="STTIME" jdbcType="TIMESTAMP" property="sttime"/>
        <result column="STSTATE" jdbcType="INTEGER" property="ststate"/>
        <result column="STORDER" jdbcType="INTEGER" property="storder"/>
        <result column="ugid" jdbcType="INTEGER" property="ugid"/>
    </resultMap>

    <resultMap id="CheckModel" type="com.ruoyi.common.core.domain.entity.CheckModel">
        <id column="ID" jdbcType="INTEGER" property="id"/>
        <result column="USERNAME" jdbcType="VARCHAR" property="username"/>
        <result column="PWD" jdbcType="VARCHAR" property="pwd"/>
        <result column="NAME" jdbcType="VARCHAR" property="name"/>
        <result column="USERCODE" jdbcType="VARCHAR" property="usercode"/>
        <result column="STTIME" jdbcType="TIMESTAMP" property="sttime"/>
        <result column="STSTATE" jdbcType="INTEGER" property="ststate"/>
        <result column="STORDER" jdbcType="INTEGER" property="storder"/>
        <result column="ugid" jdbcType="INTEGER" property="ugid"/>
        <result column="groupid" jdbcType="INTEGER" property="groupid"/>
    </resultMap>
    <sql id="Base_Column_List">
        ID, USERNAME, PWD, `NAME`, USERCODE, STTIME, STSTATE, STORDER, ugid
    </sql>
    <select id="getSupCheck" parameterType="java.lang.Integer" resultMap="CheckModel">
        select a.* ,c.groupid from ss_f_users a
                                       left join
                                   ss_f_user_role b
                                   on a.id = b.userid
                                       left join ss_f_user_group c
                                                 on a.id = c.userid
        where
            b.ROLEID = 4

    </select>


    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ss_f_users
        where ID = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from ss_f_users
        where ID = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="ID" keyProperty="id" parameterType="com.ruoyi.common.core.domain.entity.SsFUsers"
            useGeneratedKeys="true">
        insert into ss_f_users (USERNAME, PWD, `NAME`,
                                USERCODE, STTIME, STSTATE,
                                STORDER, ugid)
        values (#{username,jdbcType=VARCHAR}, #{pwd,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
                #{usercode,jdbcType=VARCHAR}, #{sttime,jdbcType=TIMESTAMP}, #{ststate,jdbcType=INTEGER},
                #{storder,jdbcType=INTEGER}, #{ugid,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" keyColumn="ID" keyProperty="id"
            parameterType="com.ruoyi.common.core.domain.entity.SsFUsers" useGeneratedKeys="true">
        insert into ss_f_users
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="username != null">
                USERNAME,
            </if>
            <if test="pwd != null">
                PWD,
            </if>
            <if test="name != null">
                `NAME`,
            </if>
            <if test="usercode != null">
                USERCODE,
            </if>
            <if test="sttime != null">
                STTIME,
            </if>
            <if test="ststate != null">
                STSTATE,
            </if>
            <if test="storder != null">
                STORDER,
            </if>
            <if test="ugid != null">
                ugid,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="pwd != null">
                #{pwd,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="usercode != null">
                #{usercode,jdbcType=VARCHAR},
            </if>
            <if test="sttime != null">
                #{sttime,jdbcType=TIMESTAMP},
            </if>
            <if test="ststate != null">
                #{ststate,jdbcType=INTEGER},
            </if>
            <if test="storder != null">
                #{storder,jdbcType=INTEGER},
            </if>
            <if test="ugid != null">
                #{ugid,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.ruoyi.common.core.domain.entity.SsFUsers">
        update ss_f_users
        <set>
            <if test="username != null">
                USERNAME = #{username,jdbcType=VARCHAR},
            </if>
            <if test="pwd != null">
                PWD = #{pwd,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                `NAME` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="usercode != null">
                USERCODE = #{usercode,jdbcType=VARCHAR},
            </if>
            <if test="sttime != null">
                STTIME = #{sttime,jdbcType=TIMESTAMP},
            </if>
            <if test="ststate != null">
                STSTATE = #{ststate,jdbcType=INTEGER},
            </if>
            <if test="storder != null">
                STORDER = #{storder,jdbcType=INTEGER},
            </if>
            <if test="ugid != null">
                ugid = #{ugid,jdbcType=INTEGER},
            </if>
        </set>
        where ID = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ruoyi.common.core.domain.entity.SsFUsers">
        update ss_f_users
        set USERNAME = #{username,jdbcType=VARCHAR},
            PWD = #{pwd,jdbcType=VARCHAR},
            `NAME` = #{name,jdbcType=VARCHAR},
            USERCODE = #{usercode,jdbcType=VARCHAR},
            STTIME = #{sttime,jdbcType=TIMESTAMP},
            STSTATE = #{ststate,jdbcType=INTEGER},
            STORDER = #{storder,jdbcType=INTEGER},
            ugid = #{ugid,jdbcType=INTEGER}
        where ID = #{id,jdbcType=INTEGER}
    </update>

    <resultMap id="SafeCheck" type="com.ruoyi.common.core.domain.entity.SafeCheck">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="groupname" jdbcType="VARCHAR" property="groupname"/>
        <result column="gongquid" jdbcType="INTEGER" property="gongquid"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
    </resultMap>

    <select id="getInfoById" parameterType="java.util.ArrayList" resultMap="SafeCheck">
        SELECT
        a.user_id AS id,
        a.user_name AS username,
        a.nick_name AS NAME
        FROM
        sys_user a
        LEFT JOIN sys_user_role b ON a.user_id = b.user_id
        LEFT JOIN sys_role c ON c.role_id = b.role_id
        WHERE
        a.user_id IN
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        AND  c.role_key IN ('sg', 'sgy' ,'aqy' )
    </select>

<!--

    <select id="getInfoById" parameterType="java.util.ArrayList" resultMap="SafeCheck">
        select
        a.id, a.username, a.name
        from
        ss_f_users a
        left join ss_f_user_role b ON a.id = b.userid
        left join ss_f_roles c ON c.id = b.roleid
        left join ss_f_roles d on c.parentid = d.id
        where a.id in
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        and (c.code = 'sg' or c.code = 'sgy' or c.code = 'aqy')
    </select>

-->

    <select id="getUserNamesByIds" resultMap="BaseResultMap" parameterType="java.util.ArrayList">
        SELECT
        su.user_id as id,
        su.user_name AS USERNAME,
        su.`password` AS PWD,
        su.nick_name AS NAME,
        su.user_name AS USERCODE,
        su.create_time AS STTIME,
        su.STATUS as STSTATE,
        null as STORDER,
        null as ugid,
        su.update_time as UPDATETIME
        FROM
        sys_user su   where user_id in
        <foreach collection="userIds" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

<!--  modify by yangaogao  20230421  修改为ruoyi的系统表
    <select id="getUserNamesByIds" resultMap="BaseResultMap" parameterType="java.util.ArrayList">
        select
        *
        from
        ss_f_users a where id in
        <foreach collection="userIds" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
-->

    <select id="getNamesByUserName" parameterType="java.util.ArrayList" resultType="com.ruoyi.common.core.domain.entity.SsFUsers">
        SELECT
        su.user_id AS id,
        su.user_name AS username,
        su.`password` AS pwd,
        su.nick_name AS NAME,
        su.create_time AS sttime,
        su.`status` AS ststate
        FROM
        sys_user su
        WHERE
        su.user_name IN
        <foreach collection="userNames" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

 <!--
    <select id="getNamesByUserName" parameterType="java.util.ArrayList" resultType="com.ruoyi.common.core.domain.entity.SsFUsers">
        select
        *
        from
        ss_f_users a where USERNAME in
        <foreach collection="userNames" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
    -->

</mapper>
