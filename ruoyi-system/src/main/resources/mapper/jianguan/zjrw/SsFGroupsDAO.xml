<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.common.core.dao.SsFGroupsDAO">
  <resultMap id="BaseResultMap" type="com.ruoyi.common.core.domain.entity.SsFGroups">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="NAME" jdbcType="VARCHAR" property="name" />
    <result column="CODE" jdbcType="VARCHAR" property="code" />
    <result column="PARENTID" jdbcType="INTEGER" property="parentid" />
    <result column="TYPE" jdbcType="VARCHAR" property="type" />
    <result column="GROUPLEVEL" jdbcType="INTEGER" property="grouplevel" />
    <result column="VISIBLE" jdbcType="VARCHAR" property="visible" />
    <result column="STTIME" jdbcType="TIMESTAMP" property="sttime" />
    <result column="STSTATE" jdbcType="INTEGER" property="ststate" />
    <result column="STORDER" jdbcType="INTEGER" property="storder" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, `NAME`, CODE, PARENTID, `TYPE`, GROUPLEVEL, VISIBLE, STTIME, STSTATE, STORDER
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from ss_f_projects
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ss_f_projects
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="ID" keyProperty="id" parameterType="com.ruoyi.common.core.domain.entity.SsFGroups" useGeneratedKeys="true">
    insert into ss_f_projects (`NAME`, CODE, PARENTID,
      `TYPE`, GROUPLEVEL, VISIBLE,
      STTIME, STSTATE, STORDER
      )
    values (#{name,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, #{parentid,jdbcType=INTEGER},
      #{type,jdbcType=VARCHAR}, #{grouplevel,jdbcType=INTEGER}, #{visible,jdbcType=VARCHAR},
      #{sttime,jdbcType=TIMESTAMP}, #{ststate,jdbcType=INTEGER}, #{storder,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="ID" keyProperty="id" parameterType="com.ruoyi.common.core.domain.entity.SsFGroups" useGeneratedKeys="true">
    insert into ss_f_projects
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `NAME`,
      </if>
      <if test="code != null">
        CODE,
      </if>
      <if test="parentid != null">
        PARENTID,
      </if>
      <if test="type != null">
        `TYPE`,
      </if>
      <if test="grouplevel != null">
        GROUPLEVEL,
      </if>
      <if test="visible != null">
        VISIBLE,
      </if>
      <if test="sttime != null">
        STTIME,
      </if>
      <if test="ststate != null">
        STSTATE,
      </if>
      <if test="storder != null">
        STORDER,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="parentid != null">
        #{parentid,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="grouplevel != null">
        #{grouplevel,jdbcType=INTEGER},
      </if>
      <if test="visible != null">
        #{visible,jdbcType=VARCHAR},
      </if>
      <if test="sttime != null">
        #{sttime,jdbcType=TIMESTAMP},
      </if>
      <if test="ststate != null">
        #{ststate,jdbcType=INTEGER},
      </if>
      <if test="storder != null">
        #{storder,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ruoyi.common.core.domain.entity.SsFGroups">
    update ss_f_projects
    <set>
      <if test="name != null">
        `NAME` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        CODE = #{code,jdbcType=VARCHAR},
      </if>
      <if test="parentid != null">
        PARENTID = #{parentid,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        `TYPE` = #{type,jdbcType=VARCHAR},
      </if>
      <if test="grouplevel != null">
        GROUPLEVEL = #{grouplevel,jdbcType=INTEGER},
      </if>
      <if test="visible != null">
        VISIBLE = #{visible,jdbcType=VARCHAR},
      </if>
      <if test="sttime != null">
        STTIME = #{sttime,jdbcType=TIMESTAMP},
      </if>
      <if test="ststate != null">
        STSTATE = #{ststate,jdbcType=INTEGER},
      </if>
      <if test="storder != null">
        STORDER = #{storder,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ruoyi.common.core.domain.entity.SsFGroups">
    update ss_f_projects
    set `NAME` = #{name,jdbcType=VARCHAR},
      CODE = #{code,jdbcType=VARCHAR},
      PARENTID = #{parentid,jdbcType=INTEGER},
      `TYPE` = #{type,jdbcType=VARCHAR},
      GROUPLEVEL = #{grouplevel,jdbcType=INTEGER},
      VISIBLE = #{visible,jdbcType=VARCHAR},
      STTIME = #{sttime,jdbcType=TIMESTAMP},
      STSTATE = #{ststate,jdbcType=INTEGER},
      STORDER = #{storder,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>


  <select id="getDeatail" parameterType="java.util.ArrayList" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from zj_f_groups_projects where PROJECTID in
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>

  </select>


  <select id="getProjectCode" parameterType="java.util.ArrayList" resultMap="BaseResultMap" >
    select a.* from ss_f_projects a
    left join zj_f_groups_projects  b
    on a.id = b.GROUPID
    where b.PROJECTID  in
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>

  </select>

  <select id="getCheckByGongQi" resultType="com.ruoyi.common.core.domain.entity.SsFUsers">
    select
        b.id, b.username, b.name, b.usercode, b.sttime, b.ststate, b.storder, b.ugid
    from
        ss_f_user_project a
    left join ss_f_users b on a.USERID = b.id
    left join ss_f_user_role c on c.userid = b.id
    left join ss_f_roles d on c.roleid = d.id
    left join ss_f_roles e on d.parentid = e.id
    left join ss_f_projects f on a.groupid = f.id
    left join ss_f_projects g on f.parentid = g.id
    where
        g.id = #{projectId}
    and
        (d.code = 'jl' or d.code = 'jianliyuan' or e.code = 'jianlijihe')
    group by
        b.username, b.name
  </select>
</mapper>
